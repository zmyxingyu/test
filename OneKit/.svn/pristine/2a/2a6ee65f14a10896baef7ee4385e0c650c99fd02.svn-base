package com.cn21.onekit.lib.update.net;

import android.content.Context;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.os.Build;
import android.provider.Settings;
import android.text.TextUtils;

import com.cn21.onekit.lib.R;
import com.cn21.onekit.lib.update.UpdateResourceResModel;
import com.cn21.onekit.lib.utils.Constants;
import com.cn21.onekit.lib.utils.DefaultShared;
import com.cn21.onekit.lib.utils.DeviceInfoUtil;

import org.chromium.components.location.LocationUtils;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;


/**
 * Created by Administrator on 2017/4/5.
 */

public class NetAccessor {

    private static final String TAG = NetAccessor.class.getSimpleName();
    private static String UPDATE_RESOURCE_URL = ""  + "api/clientSuit/updateResource.do"; //使用本地资源包更新接口
    public static final String TYPE_H5 = "H5";

    /**
     * 检查本地资源包是否有更新
     * @param context
     * @param appId
     * @return
     */
    public static UpdateResourceResModel checkUpdateResource(Context context, String appId, String resourceVersion) {
        String params = getUpdateMapParas(context, appId,resourceVersion); //本地资源包更新接口参数
        String requestUrl = UPDATE_RESOURCE_URL + "?" + params;
        String result = HttpConnUtil.doGet(context, requestUrl);
        UpdateResourceResModel updateResourceResModel = parseUpdateResourceRes(result);
        return updateResourceResModel;
    }



    /**
     *生成更新资源包接口参数
     * @return
     */
    private static String getUpdateMapParas(Context mContext,String appId, String resourceVersion) {
        Map<String, String> params = new HashMap<>();
        params.put("appId", appId);
        params.put("appVersion", getVersion(mContext));
        params.put("sysVersion", Build.VERSION.SDK_INT + "");
        params.put("resourceVersion", resourceVersion);
        params.put("resourceType", TYPE_H5);
        params.put("system", "android");
        params.put("deviceId", getDeviceId(mContext));
        params.put("sign","");

//        String ctParamsString = MULUtils.getCtParamsStringOld(Constants.CLIENT_TYPE, Constants.RETURN_DATA_FORMAT, Constants.CT_VERSION,
//                appId, appSecret, params);
        return "";
    }

    /**
     * 获取DeviceId
     * @param context
     * @return
     */
    private static String getDeviceId(Context context) {
        String sn = null;
        try {
            final String androidId = Settings.Secure.getString(context.getContentResolver(), Settings.Secure.ANDROID_ID);
            if (!TextUtils.isEmpty(androidId)) {
                sn =  androidId;
            } else {
                sn = DefaultShared.getString(context ,Constants.KEY_RANDOM_DEVICE_ID, "");
                if(TextUtils.isEmpty(sn)){
                    sn = UUID.randomUUID().toString();
                    DefaultShared.putString(context ,Constants.KEY_RANDOM_DEVICE_ID,sn);
                }
            }
            return sn;
        } catch(Exception e){
            e.printStackTrace();
        }
        return "";
    }

    /**
     * 获取版本号
     * @return 当前应用的版本号
     */
    private static String getVersion(Context context) {
        try {
            PackageManager manager = context.getPackageManager();
            PackageInfo info = manager.getPackageInfo(context.getPackageName(), 0);
            String version = info.versionName;
            return version;
        } catch (Exception e) {
            e.printStackTrace();
        }
        return "";
    }


    /**
     * 解析本地资源包更新接口的返回值
     * @return
     */
    private static UpdateResourceResModel parseUpdateResourceRes(String result) {

        if (!TextUtils.isEmpty(result)) {

            JSONObject jsonObject = null;
            try {
                jsonObject = new JSONObject(result);
            } catch (JSONException e) {
                e.printStackTrace();
            }
            if (jsonObject != null) {
                UpdateResourceResModel updateResourceResModel = new UpdateResourceResModel();
                updateResourceResModel.result = jsonObject.optInt("result");
                updateResourceResModel.msg = jsonObject.optString("msg");
                updateResourceResModel.md5 = jsonObject.optString("md5");
                updateResourceResModel.resourceUrl = jsonObject.optString("resourceUrl");
                updateResourceResModel.versionCode = jsonObject.optString("versionCode");
                return updateResourceResModel;
            }
        }
        return null;
    }

}

